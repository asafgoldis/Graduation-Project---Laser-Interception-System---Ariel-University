
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity RX is
	GENERIC(	sys_clk_freq	: INTEGER := 50_000_000;
				baudrate  		: INTEGER := 9600);	
	Port  (	CLK 				: in  STD_LOGIC;
				RX_LINE 			: in  STD_LOGIC;
				BUSY 				: out STD_LOGIC;
				DATA 				: out STD_LOGIC_VECTOR(7 downto 0);
				SUCCESS	 		: out STD_LOGIC);
end RX;

architecture Behavioral of RX is
	constant MAX_PRSCL		: INTEGER := sys_clk_freq/baudrate;	 -- 50MHz /256000=195.33 (256000: the baudrate)
	constant HALF_PRSCL		: INTEGER := MAX_PRSCL/2;
	signal 	PRSCL				: INTEGER range 0 to MAX_PRSCL := 0;
	signal 	INDEX 			: INTEGER range 0 to 9 := 0;
	signal 	DATAFLL 			: STD_LOGIC_VECTOR(9 downto 0);
	signal 	RX_FLG 			: STD_LOGIC := '0';
begin

	-- Receiver
	process(CLK)
	begin
		if rising_edge(CLK) then
			if (RX_FLG = '0' and RX_LINE = '0') then
				INDEX <= 0;
				PRSCL <= 0;
				BUSY <= '1';
				RX_FLG <= '1';
			end if;
			
			if (RX_FLG = '1') then
				DATAFLL(INDEX) <= RX_LINE;
				if (PRSCL < MAX_PRSCL) then 
					PRSCL <= PRSCL + 1;
				else
					PRSCL <= 0;
				end if;
				
				if (PRSCL = HALF_PRSCL) then
					if (INDEX < 9) then
						INDEX <= INDEX + 1;
					else
						if (DATAFLL(0) = '0' and DATAFLL(9) = '1') then
							DATA <= DATAFLL(8 downto 1);
							SUCCESS <= '1';
						else
							DATA <= (others => '0');
							SUCCESS <= '0';
						end if;
						RX_FLG <= '0';
						BUSY <= '0';
					end if;
				end if;
			end if;
			
		end if;
	end process;
	
end Behavioral;