
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity ms_counter is
	GENERIC(	sys_clk_freq	: INTEGER := 50_000_000;
				reach_to 		: INTEGER := 1000);										-- 1 sec
	Port (  	clk				: in  STD_LOGIC;													--system clock
				enable			: in  STD_LOGIC;	
				count_flag		: out STD_LOGIC);
end ms_counter;

architecture Behavioral of ms_counter is
	constant one_ms 			: INTEGER := sys_clk_freq/1000;					-- num of period for 1 ms
	--signal 	enn 				: STD_LOGIC := '0';
begin

	process(clk)
		variable count			: INTEGER range 0 to (reach_to*one_ms) := 0;
	begin
--		if rising_edge(clk) then
--			if enable = '1' then
--				count := 0;
--				enn <= '1';
--			end if;
--			
--			if enn = '1' then
--				if(count = reach_to*one_ms -1) then
--					count := 0;                                              --reset counter
--					enn <= '0';
--					count_flag <= '0';
--				else
--					count := count + 1;                                  		--increment counter
--					enn <= '1';
--					count_flag <= '1';
--				end if;
--			end if;
--			
--		end if;
		
		
		if rising_edge(clk) then
			if enable = '1' then
				count := 0;										-- reset counter
				count_flag <= '1';
			else
				if(count < reach_to*one_ms -1) then
					count := count + 1;                	--increment counter
					count_flag <= '1';
				else
					count_flag <= '0';
				end if;
			end if;
			
		end if;
	end process;
end Behavioral;
